[versions]
compileSdk = "34"
minSdk = "24"
targetSdk = "33"
versionCode = "1"
versionName = "1.0"

# Plugins
ksp = "1.9.23-1.0.20"
android = "8.3.2"
kotlin = "1.9.23"
sqlDelight = "1.5.4"
daggerHilt = "2.44"

coroutine = "1.7.1"
ktor = "2.3.1"
kotest = "5.6.2"
mockk = "1.13.5"
turbine = "1.0.0"
navigation = "2.7.7"
composeBom = "2024.05.00"
composeKotlinCompiler = "1.5.13"
httpLoggingInterceptor = "4.10.0"
hilt = "1.0.0"
room = "2.6.1"
lifecycle = "2.8.0"
voyager = "1.0.0" # 1.1.0-beta01

[plugins]

android-application = { id = "com.android.application", version.ref = "android" }
android-library = { id = "com.android.library", version.ref = "android" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
daggerHilt = { id = "com.google.dagger.hilt.android", version.ref = "daggerHilt" }
sqlDelight = { id = "com.squareup.sqldelight", version.ref = "sqlDelight" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

[libraries]

# Coroutines
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutine" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutine" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

# Logging Interceptor
loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "httpLoggingInterceptor" }

# Kotest
kotest-runner = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertionCore = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest"  }

# Mockk
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
mockk-agent = { module = "io.mockk:mockk-agent", version.ref = "mockk" }

# SqlDelight
sqlDelight-androidDriver = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-sqliteDriver = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqlDelight" }

# Turbine
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

# Navigation
navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }

# Compose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
compose-material = { module = "androidx.compose.material:material" }
compose-material3 = { module = "androidx.compose.material3:material3" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-toolingPreview = { module = "androidx.compose.ui:ui-tooling-preview" }

# Dagger Hilt
dagger-hiltAndroid = { module = "com.google.dagger:hilt-android", version.ref = "daggerHilt" }
dagger-hiltCompiler = { module = "com.google.dagger:hilt-compiler", version.ref = "daggerHilt" }

# Hilt
hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "hilt" }
hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hilt" }

# AndroidX
androidX-coreKtx = { module = "androidx.core:core-ktx", version = "1.10.1" }
androidX-appCompat = { module = "androidx.appcompat:appcompat", version = "1.6.1" }
androidX-constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version = "2.1.4" }
androidX-workRuntime = { module = "androidx.work:work-runtime-ktx", version = "2.8.1"}
androidX-activityCompose = { module = "androidx.activity:activity-compose", version = "1.9.0" }
androidX-lifecycle-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidX-lifecycle-viewModelCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
androidX-lifecycle-runtimeCompose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }

# Nitrozen
nitrozenAndroid = { module = "com.github.gofynd:nitrozen-android", version = "80ee8f1"}

# Timber
timber = { module = "com.jakewharton.timber:timber", version = "5.0.1" }

# Room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-testing = { module = "androidx.room:room-testing", version.ref = "room" }

# Voyager
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }
voyager-bottomSheetNavigator = { module = "cafe.adriel.voyager:voyager-bottom-sheet-navigator", version.ref = "voyager" }

# Testing
junit-junit4 = { module = "junit:junit", version = "4.13.2" }
androidX-test-junit = { module = "androidx.test.ext:junit", version = "1.1.5" }
androidX-test-core = { module = "androidx.test:core", version = "1.5.0" }
androidX-test-rules = { module = "androidx.test:rules", version = "1.5.0" }


# Gradle Plugins
gradlePlugin-android = { module = "com.android.tools.build:gradle", version.ref = "android" }
gradlePlugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
